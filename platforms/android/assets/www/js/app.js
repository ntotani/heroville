// Generated by CoffeeScript 1.3.1
(function() {
  var Detail, DetailScene, HEIGHT, LOG, WIDTH, battleScene, footer, heroExp, herosScene, mapScene,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  enchant();

  WIDTH = 320;

  HEIGHT = 480;

  LOG = [
    {
      txt: 'ナベリオン達があらわれた！'
    }, {
      txt: 'ハルヒロのファイアソード！<br/>ナベリオンに100ダメージ！',
      actor: 0,
      damage: {
        2: 100
      }
    }, {
      txt: 'ナベリオンのファイアソード！<br/>ハルヒロに100ダメージ！',
      actor: 2,
      damage: {
        0: 100
      }
    }, {
      txt: 'ナベ助のファイアソード！<br/>スク水子に50ダメージ！',
      actor: 3,
      damage: {
        1: 50
      }
    }, {
      txt: 'スク水子のマグロソード！<br/>ナベリオンに200ダメージ！<br/>ナベリオンは倒れた！',
      actor: 1,
      damage: {
        2: 200
      }
    }, {
      txt: 'ハルヒロのファイアソード！<br/>ナベ助に100ダメージ！',
      actor: 0,
      damage: {
        3: 100
      }
    }, {
      txt: 'ナベ助のファイアソード！<br/>スク水子に50ダメージ！',
      actor: 3,
      damage: {
        1: 50
      }
    }, {
      txt: 'スク水子のマグロソード！<br/>ナベ助に200ダメージ！<br/>ナベ助は倒れた！',
      actor: 1,
      damage: {
        3: 200
      }
    }, {
      txt: '戦闘に勝利した！'
    }, {
      txt: 'ハルヒロは1の攻撃expを手に入れた'
    }
  ];

  Avatar.prototype.loadImage = function() {
    var code, surface,
      _this = this;
    code = this.getCode().replace(/:/g, '_');
    return surface = enchant.Surface.load('img/' + code + '.gif', function() {
      return _this.image = surface;
    });
  };

  herosScene = function() {
    var ftr, hdr, item, listView, scene;
    hdr = new NavigationBar('勇者たち');
    ftr = footer();
    listView = new ListView(WIDTH, HEIGHT - hdr.height - ftr.height, true);
    listView.y = hdr.height;
    item = new ListItem(WIDTH, 48, 'ハルヒロ', new Avatar('1:2:1:2597:21270:0'));
    item.ontouchend = function() {
      return Core.instance.pushScene(new DetailScene);
    };
    listView.addChild(item);
    scene = new Scene;
    scene.addChild(hdr);
    scene.addChild(listView);
    scene.addChild(ftr);
    return scene;
  };

  heroExp = 0;

  Detail = (function(_super) {

    __extends(Detail, _super);

    Detail.name = 'Detail';

    function Detail(margin) {
      var avatar, exp, np;
      EntityGroup.call(this, WIDTH - margin, HEIGHT - margin);
      np = new enchant.widget.Ninepatch(this.width, this.height);
      np.src = Core.instance.assets['dialog.png'];
      avatar = new Avatar('1:2:1:2597:21270:0');
      exp = new Label('exp: ' + heroExp);
      exp.alignBottomOf(avatar).alignLeftIn(avatar, 10);
      this.background = np;
      this.addChild(avatar);
      this.addChild(exp);
    }

    return Detail;

  })(EntityGroup);

  DetailScene = (function(_super) {

    __extends(DetailScene, _super);

    DetailScene.name = 'DetailScene';

    function DetailScene() {
      var detail, margin;
      Modal.call(this);
      margin = 32;
      detail = new Detail(margin);
      detail.alignHorizontalCenterIn(this).alignVerticalCenterIn(this);
      this.addChild(detail);
      this.ontouchend = function() {
        return Core.instance.popScene();
      };
    }

    return DetailScene;

  })(Modal);

  battleScene = function() {
    var applyLog, bg, boy, enemy, index, list, scene;
    bg = new AvatarBG(1);
    boy = new Avatar('1:2:1:2597:21270:0');
    boy.y = 48;
    enemy = new Avatar('1:2:1:2597:21270:0');
    enemy.x = WIDTH - 64;
    enemy.y = 48;
    enemy.scaleX = 1;
    list = new ListView(WIDTH, HEIGHT - 176, true);
    list.y = 176;
    index = 0;
    applyLog = function() {
      var item;
      if (index >= LOG.length) {
        Core.instance.replaceScene(mapScene());
        return;
      }
      item = new ListItem(WIDTH, 48, LOG[index].txt);
      list.addChild(item);
      return index++;
    };
    applyLog();
    scene = new Scene;
    scene.addChild(bg);
    scene.addChild(boy);
    scene.addChild(enemy);
    scene.addChild(list);
    scene.ontouchend = applyLog;
    return scene;
  };

  mapScene = function() {
    var bg, collision, i, j, mapData, scene, treeData, _i, _j;
    mapData = (function() {
      var _i, _results;
      _results = [];
      for (i = _i = 0; _i < 30; i = ++_i) {
        _results.push((function() {
          var _j, _results1;
          _results1 = [];
          for (j = _j = 0; _j < 20; j = ++_j) {
            _results1.push(164);
          }
          return _results1;
        })());
      }
      return _results;
    })();
    for (j = _i = 8; _i <= 11; j = ++_i) {
      for (i = _j = 13; _j <= 16; i = ++_j) {
        mapData[i][j] = 1;
      }
    }
    treeData = (function() {
      var _k, _results;
      _results = [];
      for (i = _k = 0; _k < 30; i = ++_k) {
        _results.push((function() {
          var _l, _results1;
          _results1 = [];
          for (j = _l = 0; _l < 20; j = ++_l) {
            _results1.push(-1);
          }
          return _results1;
        })());
      }
      return _results;
    })();
    treeData[14][9] = 60;
    treeData[14][10] = 61;
    treeData[15][9] = 76;
    treeData[15][10] = 77;
    collision = (function() {
      var _k, _results;
      _results = [];
      for (i = _k = 0; _k < 30; i = ++_k) {
        _results.push((function() {
          var _l, _results1;
          _results1 = [];
          for (j = _l = 0; _l < 20; j = ++_l) {
            _results1.push(0);
          }
          return _results1;
        })());
      }
      return _results;
    })();
    collision[14][9] = 1;
    collision[14][10] = 1;
    collision[15][9] = 1;
    collision[15][10] = 1;
    bg = new Map(16, 16);
    bg.image = Core.instance.assets['img/map1.png'];
    bg.loadData(mapData, treeData);
    bg.collisionData = collision;
    scene = new Scene;
    scene.ontouchend = function(e) {
      if (bg.hitTest(e.x, e.y)) {
        return Core.instance.replaceScene(battleScene());
      }
    };
    scene.addChild(bg);
    scene.addChild(footer());
    return scene;
  };

  footer = function() {
    var core, flag, flagIcon, iconMenu, team, teamIcon;
    core = Core.instance;
    flag = new Sprite(32, 32);
    flag.backgroundColor = 'red';
    flagIcon = new Icon(flag, '冒険');
    flagIcon.ontouchend = function() {
      return core.replaceScene(mapScene());
    };
    team = new Sprite(32, 32);
    team.backgroundColor = 'green';
    teamIcon = new Icon(team, 'パーティ');
    teamIcon.ontouchend = function() {
      return core.replaceScene(herosScene());
    };
    iconMenu = new IconMenu([flagIcon, teamIcon]);
    iconMenu.y = HEIGHT - iconMenu.height;
    return iconMenu;
  };

  window.onload = function() {
    var core;
    core = new Core(WIDTH, HEIGHT);
    return core.preload('img/map1.png', 'avatarBg1.png', 'avatarBg2.png', 'avatarBg3.png').start().next(function() {
      return core.pushScene(mapScene());
    });
  };

}).call(this);
